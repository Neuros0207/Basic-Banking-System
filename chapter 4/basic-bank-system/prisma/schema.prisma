generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model accounts {
  account_id                                         Int            @id @default(autoincrement())
  balance                                            Decimal        @default(100000) @db.Decimal(15, 2)
  user_id                                            Int
  email                                              String         @unique
  password                                           String
  users                                              users          @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  transactions_transactions_destination_idToaccounts transactions[] @relation("transactions_destination_idToaccounts")
  transactions                                       transactions[]
}

model profiles {
  profile_id      Int        @id @default(autoincrement())
  user_id         Int
  phone_number    String?
  identity_type   identitas?
  identity_number String?    @unique(map: "profiles_identity_number") @db.VarChar
  address         String?
  users           users      @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

model transactions {
  transaction_id                                 Int       @id @default(autoincrement())
  transaction_type                               jenis?
  amount                                         Decimal?  @db.Decimal(15, 2)
  transaction_time                               DateTime? @default(dbgenerated("CURRENT_TIMESTAMP(0)")) @db.Timestamp(6)
  destination_id                                 Int?
  account_id                                     Int
  accounts_transactions_destination_idToaccounts accounts? @relation("transactions_destination_idToaccounts", fields: [destination_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_transactions_accounts")
  accounts                                       accounts  @relation(fields: [account_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_transactions_accounts2")
}

model users {
  user_id   Int        @id @default(autoincrement())
  user_name String     @unique @db.VarChar(100)
  accounts  accounts[]
  profiles  profiles[]
}

enum identitas {
  KTP
  SIM
  Passport
}

enum jenis {
  Deposit
  Withdraw
  Transfer
}
